
/***************************************************************************
 *  Original Diku Mud copyright (C) 1990, 1991 by Sebastian Hammer,        *
 *  Michael Seifert, Hans Henrik St{rfeldt, Tom Madsen, and Katja Nyboe.   *
 *                                                                         *
 *  Merc Diku Mud improvments copyright (C) 1992, 1993 by Michael          *
 *  Chastain, Michael Quan, and Mitchell Tse.                              *
 *                                                                         *
 *  In order to use any part of this Merc Diku Mud, you must comply with   *
 *  both the original Diku license in 'license.doc' as well the Merc       *
 *  license in 'license.txt'.  In particular, you may not remove either of *
 *  these copyright notices.                                               *
 *                                                                         *
 *  Much time and thought has gone into this software and you are          *
 *  benefitting.  We hope that you share your changes too.  What goes      *
 *  around, comes around.                                                  *
 ***************************************************************************/

/***************************************************************************
*       ROM 2.4 is copyright 1993-1995 Russ Taylor                         *
*       ROM has been brought to you by the ROM consortium                  *
*           Russ Taylor (rtaylor@pacinfo.com)                              *
*           Gabrielle Taylor (gtaylor@pacinfo.com)                         *
*           Brian Moore (rom@rom.efn.org)                                  *
*       By using this code, you have agreed to follow the terms of the     *
*       ROM license, in the file Rom24/doc/rom.license                     *
***************************************************************************/

/****************************************************************************
*  Automated Quest code written by Vassago of MOONGATE, moongate.ams.com    *
*  4000. Copyright (c) 1996 Ryan Addams, All Rights Reserved. Use of this   *
*  code is allowed provided you add a credit line to the effect of:         *
*  "Quest Code (c) 1996 Ryan Addams" to your logon screen with the rest     *
*  of the standard diku/rom credits. If you use this or a modified version  *
*  of this code, let me know via email: moongate@moongate.ams.com. Further  *
*  updates will be posted to the rom mailing list. If you'd like to get     *
*  the latest version of quest.c, please send a request to the above add-   *
*  ress. Quest Code v2.03. Please do not remove this notice from this file. *
****************************************************************************/

To install this code, add the following lines to the stated files:

>> mud.h

#define PLR_QUESTOR     ###
[### will be a free bitvector number or letter, like A, B, C, etc]

#define IS_QUESTOR(ch)     (IS_SET((ch)->act, PLR_QUESTOR))

> add to struct  char_data:

    CHAR_DATA *         questgiver; /* Vassago */
    int                 questpoints;  /* Vassago */
    sh_int              nextquest; /* Vassago */
    sh_int              countdown; /* Vassago */
    sh_int              questobj; /* Vassago */
    sh_int              questmob; /* Vassago */

>> act_info.c

> add to show_char_to_char_0:

    if (IS_NPC(victim) &&ch->questmob > 0 && victim->pIndexData->vnum == ch->questmob)
        strcat( buf, "[TARGET] ");

>> fight.c

> add to function group_gain()

        if (IS_SET(ch->act, PLR_QUESTOR)&&IS_NPC(victim))
        {
            if (ch->questmob == victim->pIndexData->vnum)
            {
                send_to_char("You have almost completed your QUEST!\n\r",ch);
                send_to_char("Return to the questmaster before your time runs out!\n\r",ch);
                ch->questmob = -1;
            }
        }

>> interp.c

    { "quest",          do_quest,       POS_RESTING,     0,  LOG_NORMAL, 1 },

>> interp.h

DECLARE_DO_FUN( do_quest        );

>> save.c

> add to fwrite_char() function:

    if (ch->questpoints != 0)
        fprintf( fp, "QuestPnts %d\n",  ch->questpoints );
    if (ch->nextquest != 0)
        fprintf( fp, "QuestNext %d\n",  ch->nextquest   );
    else if (ch->countdown != 0)
        fprintf( fp, "QuestNext %d\n",  10              );

> add to fread_char() function:

        case 'Q':
            KEY( "QuestPnts",   ch->questpoints,        fread_number( fp ) );
            KEY( "QuestNext",   ch->nextquest,          fread_number( fp ) );
            break;

>> special.c

[add a special procedure called spec_questmaster. Set this procedure on
 any mob you want to give quests. The following is just an example:]

> stick this at the top of the file with the other declarations:

DECLARE_SPEC_FUN(       spec_questmaster        );   /* Vassago */

> add this to the spec_table:

    { "spec_questmaster",       spec_questmaster        }, /* Vassago */

> and now, the actual function: (needless to say, feel free to improvise :)

bool spec_questmaster (CHAR_DATA *ch)
{
    if (ch->fighting != NULL) return spec_cast_mage( ch );
    return FALSE;
}

>> update.c

> add to the 'local functions' section:

void    quest_update    args( ( void ) ); /* Vassago - quest.c */

> add to the update_handler() function under pulse_area section:
> Make SURE pulse area is not randomized. If it is, just delete the
> number_range lines and substite with: pulse_area = PULSE_AREA;

        quest_update     ( );

